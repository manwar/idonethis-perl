package WebService::Idonethis;
use v5.010;
use strict;
use warnings;
use autodie;
use Moose;
use MooseX::Method::Signatures;
use WWW::Mechanize;
use JSON::Any;
use Carp qw(croak);

my $json = JSON::Any->new;

# ABSTRACT: WebScraping pseudo-API for iDoneThis

# VERSION: Generated by DZP::OurPkg:Version

=head1 SYNOPSIS

    use WebService::Idonethis;

    my $idt = WebService::Idonethis->new(
        user => 'someuser',
        pass => 'somepass',
    );

    my $dones = $idt->get_day("2012-01-01");

    foreach my $item (@$dones) {
        say "* $item->{text}";
    }

=head1 DESCRIPTION

This is an extremely bare-bones wrapper around the L<idonethis.com>
website that allows retrieving of what was done on a particular day.
It's only been tested with personal calendars. Patches are extremely
welcome.

This code was motivated by I<idonethis.com>'s most excellent (but now
defunct) memory service, which would send reminders as to what one
was doing a year ago by email.

The L<idonethis-memories> command included in this distribution is
a simple proof-of-concept that reimplements this service, and is suitable
for running as a cron job.

Patches are extremely welcome. L<https://github.com/pfenwick/idonethis-perl>

=for Pod::Coverage BUILD

=cut

has agent    => ( is => 'rw' );
has user_url => ( is => 'rw' );

sub BUILD {
    my ($self, $args) = @_;

    my $agent = WWW::Mechanize->new;
    $agent->agent_alias ( "Linux Mozilla" );

    $self->agent( $agent );

    # Log in!

    $agent->get( "https://idonethis.com/accounts/login/" );

    $agent->submit_form(
        form_id => 'register',
        fields => {
            username => $args->{user},
            password => $args->{pass},
        }
    );

    my $url = $agent->uri;

    if ($url !~ m{/cal/$args->{user}/?$}) {
        croak "Login to idonethis failed (unexpected URL $url)";
    }

    $self->user_url( $url );

    return;

}

=method get_day

    $idt->get_day("2012-01-01");

Gets the data for a given day. An array will be returned which is a
conversation from the JSON data structure used by idonethis. The
structure at the time of writing looks like this:

    [
        {
            owner => 'some_user',
            avatar_url => '/site_media/blahblah/foo.png',
            modified => '2012-01-01T15:22:33.12345',
            calendar => {
                short_name => 'some_short_name', # usually owner name
                name => 'personal',
                type => 'PERSONAL',
            },
            created => '2012-01-01T15:22:33.12345',
            done_date => '2012-01-01',
            text => 'Wrote code to frobinate the foobar',
            nicest_name => 'some_user',
            type => 'dailydone',
            id => 12345
        },
        ...
    ]

=cut

method get_day( Str $date) {
    my $url = $self->user_url . "dailydone?";

    $url .= "start=$date&end=$date";

    $self->agent->get($url);

    return $json->decode( $self->agent->content );
}

1;
